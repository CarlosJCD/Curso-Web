{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","terminoBusqueda","e","target","name","value","removerHoraPrevia","Object","values","includes","async","url","resultado","fetch","eventos","listadoHoras","forEach","li","classList","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","remove","horaDisponible","addEventListener","seleccionarHora","obtenerHorasDisponibles","json","buscarEventos","horaPrevia","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","inputHiddenPonenteId","seleccionarPonente","ponenteSeleccionadoAnterior","ponente","ponenteId","length","expresion","RegExp","nombre","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","id","onclick","appendChild","noResultados","mostrarPonentes","respuesta","arrayPonentes","apellido","formatearPonentes","obtenerPonentes","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","liTag","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","tagNuevo","trim","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function () {\n    const horas = document.querySelector('#horas');\n\n    if (horas) {\n\n        let busqueda = {\n            categoria_id: '',\n            dia: ''\n        }\n\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\n        const dias = document.querySelectorAll('[name=\"dia\"]');\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\n\n        categoria.addEventListener('change', terminoBusqueda);\n        dias.forEach(dia => dia.addEventListener('change', terminoBusqueda));\n\n        function terminoBusqueda(e) {\n            busqueda[e.target.name] = e.target.value;\n\n            inputHiddenDia.value = '';\n            inputHiddenHora.value = '';\n            removerHoraPrevia();\n            if (Object.values(busqueda).includes('')) {\n                return;\n            }\n\n            buscarEventos();\n        }\n\n        async function buscarEventos() {\n            const { dia, categoria_id } = busqueda;\n\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\n\n            const resultado = await fetch(url);\n            const eventos = await resultado.json();\n\n            obtenerHorasDisponibles(eventos);\n        }\n\n        function obtenerHorasDisponibles(eventos) {\n            const listadoHoras = document.querySelectorAll('#horas li');\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'));\n\n            const horasTomadas = eventos.map(evento => evento.hora_id);\n\n            const listadoHorasArray = Array.from(listadoHoras);\n            const resultado = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId));\n            resultado.forEach(li => li.classList.remove('horas__hora--deshabilitada'));\n\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\n            horasDisponibles.forEach(horaDisponible => horaDisponible.addEventListener('click', seleccionarHora));\n        }\n\n        function seleccionarHora(e) {\n\n            removerHoraPrevia();\n\n            e.target.classList.add('horas__hora--seleccionada')\n\n            inputHiddenHora.value = e.target.dataset.horaId;\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\n        }\n\n        function removerHoraPrevia() {\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\n            if (horaPrevia) {\n                horaPrevia.classList.remove('horas__hora--seleccionada');\n            }\n        }\n    }\n})(); ","(\n    function () {\n        const ponentesInput = document.querySelector('#ponentes');\n\n        if (ponentesInput) {\n            let ponentes = [];\n            let ponentesFiltrados = [];\n\n            const listadoPonentes = document.querySelector('#listado-ponentes');\n            const inputHiddenPonenteId = document.querySelector('[name=\"ponente_id\"]');\n\n            ponentesInput.addEventListener('input', buscarPonentes);\n\n            obtenerPonentes();\n\n            async function obtenerPonentes() {\n                const url = `/api/ponentes`;\n\n                const respuesta = await fetch(url);\n                const resultado = await respuesta.json();\n\n                formatearPonentes(resultado);\n            }\n\n            function formatearPonentes(arrayPonentes = []) {\n                ponentes = arrayPonentes.map(ponente => {\n                    return {\n                        nombre: `${ponente.nombre} ${ponente.apellido}`,\n                        id: ponente.id\n                    };\n                });\n            }\n\n            function buscarPonentes(e) {\n                const busqueda = e.target.value;\n                if (busqueda.length > 1) {\n                    const expresion = new RegExp(busqueda, 'i');\n                    ponentesFiltrados = ponentes.filter(ponente => {\n                        if (ponente.nombre.toLowerCase().search(expresion) != -1) {\n                            return ponente;\n                        }\n                    });\n                } else {\n                    ponentesFiltrados = [];\n                }\n                mostrarPonentes();\n            }\n\n            function mostrarPonentes() {\n                while (listadoPonentes.firstChild) {\n                    listadoPonentes.removeChild(listadoPonentes.firstChild);\n                }\n\n                if (ponentesFiltrados.length > 0) {\n                    ponentesFiltrados.forEach(ponente => {\n                        const ponenteHTML = document.createElement('LI');\n                        ponenteHTML.classList.add('listado-ponentes__ponente');\n                        ponenteHTML.textContent = ponente.nombre;\n                        ponenteHTML.dataset.ponenteId = ponente.id;\n                        ponenteHTML.onclick = seleccionarPonente;\n\n                        listadoPonentes.appendChild(ponenteHTML);\n                    });\n                } else {\n                    const noResultados = document.createElement('P');\n                    noResultados.classList.add('listado-ponentes__no-resultado');\n                    noResultados.textContent = 'No hay resultados para tu b√∫squeda';\n\n                    listadoPonentes.appendChild(noResultados);\n                }\n\n            }\n            function seleccionarPonente(e) {\n                const ponenteSeleccionadoAnterior = document.querySelector('.listado-ponentes__ponente--seleccionado');\n                if (ponenteSeleccionadoAnterior) {\n                    ponenteSeleccionadoAnterior.classList.remove('listado-ponentes__ponente--seleccionado');\n                }\n\n                const ponente = e.target;\n                ponente.classList.add('listado-ponentes__ponente--seleccionado');\n\n                inputHiddenPonenteId.value = ponente.dataset.ponenteId;\n            }\n        }\n\n    }\n)();","(function () {\n    const tagsInput = document.querySelector('#tags_input');\n    if (tagsInput) {\n\n        const tagsDiv = document.querySelector('#tags');\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\n\n        let tags = [];\n\n        if (tagsInputHidden.value !== '') {\n            tags = tagsInputHidden.value.split(',');\n            mostrarTags();\n        }\n\n        tagsInput.addEventListener('keypress', guardarTag);\n\n\n\n        function guardarTag(e) {\n            if (e.keyCode === 44) {\n                const tagNuevo = e.target.value.trim();\n                if (tagNuevo === '' || tagNuevo.length < 1) {\n                    return;\n                }\n\n                e.preventDefault();\n\n                tags = [...tags, tagNuevo]\n\n                tagsInput.value = '';\n\n                mostrarTags();\n            }\n        }\n\n        function mostrarTags() {\n            tagsDiv.textContent = '';\n            tags.forEach(tag => {\n                const liTag = document.createElement('LI');\n                liTag.classList.add('formulario__tag');\n                liTag.textContent = tag;\n                liTag.ondblclick = eliminarTag;\n                tagsDiv.appendChild(liTag);\n            });\n            actualizarInputHidden();\n        }\n\n        function eliminarTag(e) {\n            e.target.remove();\n\n            tags = tags.filter(tag => tag !== e.target.textContent)\n            actualizarInputHidden();\n        }\n\n        function actualizarInputHidden() {\n            tagsInputHidden.value = tags.toString();\n        }\n    }\n\n})();"]}