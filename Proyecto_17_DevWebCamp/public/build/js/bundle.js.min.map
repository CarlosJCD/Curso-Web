{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","e","target","name","removerHoraPrevia","Object","values","includes","buscarEventos","async","url","resultado","fetch","eventos","listadoHoras","li","classList","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","remove","horaDisponible","seleccionarHora","obtenerHorasDisponibles","json","horaPrevia","idHoraSeleccionada","horaSeleccionada","onclick","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","inputHiddenPonenteId","seleccionarPonente","ponenteSeleccionadoAnterior","ponente","ponenteId","length","expresion","RegExp","nombre","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","id","appendChild","noResultados","mostrarPonentes","respuesta","arrayPonentes","apellido","formatearPonentes","obtenerPonentes","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","liTag","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","tagNuevo","trim","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function () {\n    const horas = document.querySelector('#horas');\n\n    if (horas) {\n\n\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\n        const dias = document.querySelectorAll('[name=\"dia\"]');\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\n\n        categoria.addEventListener('change', terminoBusqueda);\n        dias.forEach(dia => dia.addEventListener('change', terminoBusqueda));\n\n        let busqueda = {\n            categoria_id: +categoria.value || '',\n            dia: +inputHiddenDia.value || ''\n        }\n\n        if (!(Object.values(busqueda).includes(''))) {\n            (async () => {\n                await buscarEventos();\n\n                const idHoraSeleccionada = inputHiddenHora.value;\n                const horaSeleccionada = document.querySelector(`[data-hora-id =\"${idHoraSeleccionada}\"]`);\n                horaSeleccionada.classList.remove(\"horas__hora--deshabilitada\");\n                horaSeleccionada.classList.add(\"horas__hora--seleccionada\");\n                horaSeleccionada.onclick = seleccionarHora;\n            })();\n        }\n\n        function terminoBusqueda(e) {\n            busqueda[e.target.name] = e.target.value;\n\n            inputHiddenDia.value = '';\n            inputHiddenHora.value = '';\n            removerHoraPrevia();\n            if (Object.values(busqueda).includes('')) {\n                return;\n            }\n\n            buscarEventos();\n        }\n\n        async function buscarEventos() {\n            const { dia, categoria_id } = busqueda;\n\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\n\n            const resultado = await fetch(url);\n            const eventos = await resultado.json();\n\n            obtenerHorasDisponibles(eventos);\n        }\n\n        function obtenerHorasDisponibles(eventos) {\n            const listadoHoras = document.querySelectorAll('#horas li');\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'));\n\n            const horasTomadas = eventos.map(evento => evento.hora_id);\n\n            const listadoHorasArray = Array.from(listadoHoras);\n            const resultado = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId));\n            resultado.forEach(li => li.classList.remove('horas__hora--deshabilitada'));\n\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\n            horasDisponibles.forEach(horaDisponible => horaDisponible.addEventListener('click', seleccionarHora));\n        }\n\n        function seleccionarHora(e) {\n\n            removerHoraPrevia();\n\n            e.target.classList.add('horas__hora--seleccionada')\n\n            inputHiddenHora.value = e.target.dataset.horaId;\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\n        }\n\n        function removerHoraPrevia() {\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\n            if (horaPrevia) {\n                horaPrevia.classList.remove('horas__hora--seleccionada');\n            }\n        }\n    }\n})(); ","(\n    function () {\n        const ponentesInput = document.querySelector('#ponentes');\n\n        if (ponentesInput) {\n            let ponentes = [];\n            let ponentesFiltrados = [];\n\n            const listadoPonentes = document.querySelector('#listado-ponentes');\n            const inputHiddenPonenteId = document.querySelector('[name=\"ponente_id\"]');\n\n            ponentesInput.addEventListener('input', buscarPonentes);\n\n            obtenerPonentes();\n\n            async function obtenerPonentes() {\n                const url = `/api/ponentes`;\n\n                const respuesta = await fetch(url);\n                const resultado = await respuesta.json();\n\n                formatearPonentes(resultado);\n            }\n\n            function formatearPonentes(arrayPonentes = []) {\n                ponentes = arrayPonentes.map(ponente => {\n                    return {\n                        nombre: `${ponente.nombre} ${ponente.apellido}`,\n                        id: ponente.id\n                    };\n                });\n            }\n\n            function buscarPonentes(e) {\n                const busqueda = e.target.value;\n                if (busqueda.length > 1) {\n                    const expresion = new RegExp(busqueda, 'i');\n                    ponentesFiltrados = ponentes.filter(ponente => {\n                        if (ponente.nombre.toLowerCase().search(expresion) != -1) {\n                            return ponente;\n                        }\n                    });\n                } else {\n                    ponentesFiltrados = [];\n                }\n                mostrarPonentes();\n            }\n\n            function mostrarPonentes() {\n                while (listadoPonentes.firstChild) {\n                    listadoPonentes.removeChild(listadoPonentes.firstChild);\n                }\n\n                if (ponentesFiltrados.length > 0) {\n                    ponentesFiltrados.forEach(ponente => {\n                        const ponenteHTML = document.createElement('LI');\n                        ponenteHTML.classList.add('listado-ponentes__ponente');\n                        ponenteHTML.textContent = ponente.nombre;\n                        ponenteHTML.dataset.ponenteId = ponente.id;\n                        ponenteHTML.onclick = seleccionarPonente;\n\n                        listadoPonentes.appendChild(ponenteHTML);\n                    });\n                } else {\n                    const noResultados = document.createElement('P');\n                    noResultados.classList.add('listado-ponentes__no-resultado');\n                    noResultados.textContent = 'No hay resultados para tu búsqueda';\n\n                    listadoPonentes.appendChild(noResultados);\n                }\n\n            }\n            function seleccionarPonente(e) {\n                const ponenteSeleccionadoAnterior = document.querySelector('.listado-ponentes__ponente--seleccionado');\n                if (ponenteSeleccionadoAnterior) {\n                    ponenteSeleccionadoAnterior.classList.remove('listado-ponentes__ponente--seleccionado');\n                }\n\n                const ponente = e.target;\n                ponente.classList.add('listado-ponentes__ponente--seleccionado');\n\n                inputHiddenPonenteId.value = ponente.dataset.ponenteId;\n            }\n        }\n\n    }\n)();","(function () {\n    const tagsInput = document.querySelector('#tags_input');\n    if (tagsInput) {\n\n        const tagsDiv = document.querySelector('#tags');\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\n\n        let tags = [];\n\n        if (tagsInputHidden.value !== '') {\n            tags = tagsInputHidden.value.split(',');\n            mostrarTags();\n        }\n\n        tagsInput.addEventListener('keypress', guardarTag);\n\n\n\n        function guardarTag(e) {\n            if (e.keyCode === 44) {\n                const tagNuevo = e.target.value.trim();\n                if (tagNuevo === '' || tagNuevo.length < 1) {\n                    return;\n                }\n\n                e.preventDefault();\n\n                tags = [...tags, tagNuevo]\n\n                tagsInput.value = '';\n\n                mostrarTags();\n            }\n        }\n\n        function mostrarTags() {\n            tagsDiv.textContent = '';\n            tags.forEach(tag => {\n                const liTag = document.createElement('LI');\n                liTag.classList.add('formulario__tag');\n                liTag.textContent = tag;\n                liTag.ondblclick = eliminarTag;\n                tagsDiv.appendChild(liTag);\n            });\n            actualizarInputHidden();\n        }\n\n        function eliminarTag(e) {\n            e.target.remove();\n\n            tags = tags.filter(tag => tag !== e.target.textContent)\n            actualizarInputHidden();\n        }\n\n        function actualizarInputHidden() {\n            tagsInputHidden.value = tags.toString();\n        }\n    }\n\n})();"]}